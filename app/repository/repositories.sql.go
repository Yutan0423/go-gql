// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: repositories.sql

package repository

import (
	"context"
	"database/sql"
	"time"
)

const addTestRepository = `-- name: AddTestRepository :execresult
INSERT INTO repositories(id, owner, name) VALUES
('REPO_1', 'U_1', 'repo1')
`

func (q *Queries) AddTestRepository(ctx context.Context) (sql.Result, error) {
	return q.db.ExecContext(ctx, addTestRepository)
}

const getRepoByFullName = `-- name: GetRepoByFullName :one
SELECT id, name, owner, created_at
FROM repositories
WHERE name = ?
AND owner = ?
`

type GetRepoByFullNameParams struct {
	Name  string
	Owner string
}

type GetRepoByFullNameRow struct {
	ID        string
	Name      string
	Owner     string
	CreatedAt time.Time
}

func (q *Queries) GetRepoByFullName(ctx context.Context, arg GetRepoByFullNameParams) (GetRepoByFullNameRow, error) {
	row := q.db.QueryRowContext(ctx, getRepoByFullName, arg.Name, arg.Owner)
	var i GetRepoByFullNameRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Owner,
		&i.CreatedAt,
	)
	return i, err
}
